The ``0-add_integer.py`` module
============================
Using ``add_integer.py``
---------------------
This is a text file in reStructuredText format.
It contains a test for the add_integer function in the 0-add_integer module.
First import ``add_integer`` from the ``0-add_integer`` module:

    Test 00 Open 0-add_integer
    >>> add_integer = __import__('0-add_integer').add_integer

Now test:
    Test 01: Two positive integers passed
    >>> add_integer(6, 7)
    13

    Test 02: One negative integers passed
    >>> add_integer(4, -1)
    3

    Test 03: One float passed
    >>> add_integer(1.6, 4)
    5

    Test 04: One value is not number passed
    >>> add_integer("2", 4)
    Traceback (most recent call last):
    TypeError: a must be an integer

    Test 05: a single positive integer passed
    >>> add_integer(4)
    102

    Test 06: Two values are not numbers passed
    >>> add_integer("2","1")
    Traceback (most recent call last):
    TypeError: a must be an integer

    Test 07: zero as first value passed
    >>> add_integer(0)
    98

    Test 08: a value passed as NaN
    >>> add_integer(float('NaN'), 1)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    Test 09: a value passed as infinity
    >>> add_integer(float('inf'), 1)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer


    






